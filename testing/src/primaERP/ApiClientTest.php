<?php

namespace test\primaERP;

use primaERP\ApiClient;
use Test\ObjectForTesting;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-10-05 at 14:07:11.
 */
class ApiClientTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var ApiClient
     */
    protected $object;
    
    public $clientConfig = [
            'company' => 'vitexsoftware',
            'url' => 'https://vitexsoftware.api.primaerp.com/',
            'user' => 'info@vitexsoftware.cz',
            'password' => 'erpjeprima',
            'debug' => true];

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new ApiClient();
        $section   = $this->object->getSection();
        $this->clientConfig['section'] = $section;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    public function testConstructor()
    {
        $classname = get_class($this->object);
        // Get mock, without the constructor being called
        $mock = $this->getMockBuilder($classname)
            ->disableOriginalConstructor()
            ->getMockForAbstractClass();
        $mock->__construct(1, ['debug' => false]);

        $mock->__construct('',        $this->clientConfig            );
    }

    /**
     * @covers primaERP\ApiClient::setUp
     */
    public function testSetUp()
    {
        $this->object->setUp();
    }

    /**
     * @covers primaERP\ApiClient::curlInit
     */
    public function testCurlInit()
    {
        $this->object->curlInit();
        $this->assertInternalType('resource', $this->object->curl,'Eror initialising cURL');
    }

    /**
     * @covers primaERP\ApiClient::processInit
     * @todo   Implement testProcessInit().
     */
    public function testProcessInit()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers primaERP\ApiClient::setSection
     * @todo   Implement testSetSection().
     */
    public function testSetSection()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers primaERP\ApiClient::getSection
     * @todo   Implement testGetSection().
     */
    public function testGetSection()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers primaERP\ApiClient::object2array
     */
    public function testObject2array()
    {
        $this->assertNull($this->object->object2array(new \stdClass()));
        $this->assertEquals(
            [
            'item' => 1,
            'arrItem' => ['a', 'b' => 'c']
            ]
            , $this->object->object2array(new ObjectForTesting()));
        $this->assertEquals(
            [[
            'item' => 1,
            'arrItem' => ['a', 'b' => 'c']
            ]]
            , $this->object->object2array([new ObjectForTesting()]));
    }

    /**
     * @covers primaERP\ApiClient::setPostFields
     */
    public function testSetPostFields()
    {
        $this->object->setPostFields('ToPOST');
    }

    /**
     * @covers primaERP\ApiClient::getSectionURL
     * @todo   Implement testGetSectionURL().
     */
    public function testGetSectionURL()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers primaERP\ApiClient::sectionUrlWithSuffix
     * @todo   Implement testSectionUrlWithSuffix().
     */
    public function testSectionUrlWithSuffix()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers primaERP\ApiClient::updateApiURL
     * @todo   Implement testUpdateApiURL().
     */
    public function testUpdateApiURL()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers primaERP\ApiClient::requestData
     * @todo   Implement testRequestData().
     */
    public function testRequestData()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers primaERP\ApiClient::authentication
     * @todo   Implement testAuthentication().
     */
    public function testAuthentication()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers primaERP\ApiClient::addUrlParams
     * @todo   Implement testAddUrlParams().
     */
    public function testAddUrlParams()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers primaERP\ApiClient::addDefaultUrlParams
     */
    public function testAddDefaultUrlParams()
    {
        $this->assertEquals('http://vitexsoftware.cz?a=b',
            $this->object->addDefaultUrlParams('http://vitexsoftware.cz?a=b'));
        $this->object->defaultUrlParams['id'] = 1;
        $this->assertEquals('http://vitexsoftware.cz/path?a=b&id=1',
            $this->object->addDefaultUrlParams('http://vitexsoftware.cz/path?a=b'));
    }

    /**
     * @covers primaERP\ApiClient::rawResponseToArray
     */
    public function testRawResponseToArray()
    {
        $this->assertEquals(array(1, -2, 3.333, 4e17, "abc", "รก\n", null, array(2.1, 2.2, array("2.2.1")), false, true, "", "key"=>"value", 'abc"def'=>array()) ,$this->object->rawResponseToArray('{
    "0": 1,
    "1": -2,
    "2": 3.333,
    "3": 4.0e+17,
    "4": "abc",
    "5": "\u00e1\n",
    "6": null,
    "7": [
        2.1,
        2.2,
        [
            "2.2.1"
        ]
    ],
    "8": false,
    "9": true,
    "10": "",
    "key": "value",
    "abc\"def": []
}
'));
        $this->assertEmpty($this->object->rawResponseToArray('No Json - Error'));
    }

    /**
     * @covers primaERP\ApiClient::parseResponse
     * @todo   Implement testParseResponse().
     */
    public function testParseResponse()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers primaERP\ApiClient::parseError
     * @todo   Implement testParseError().
     */
    public function testParseError()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers primaERP\ApiClient::doCurlRequest
     * @todo   Implement testDoCurlRequest().
     */
    public function testDoCurlRequest()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers primaERP\ApiClient::loadFromAPI
     * @todo   Implement testLoadFromAPI().
     */
    public function testLoadFromAPI()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers primaERP\ApiClient::logResult
     * @todo   Implement testLogResult().
     */
    public function testLogResult()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers primaERP\ApiClient::getTokenString
     * @todo   Implement testGetTokenString().
     */
    public function testGetTokenString()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers primaERP\ApiClient::ignore404
     * @todo   Implement testIgnore404().
     */
    public function testIgnore404()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers primaERP\ApiClient::disconnect
     * @todo   Implement testDisconnect().
     */
    public function testDisconnect()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers primaERP\ApiClient::__wakeup
     * @todo   Implement test__wakeup().
     */
    public function test__wakeup()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers primaERP\ApiClient::__destruct
     * @todo   Implement test__destruct().
     */
    public function test__destruct()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }
}
